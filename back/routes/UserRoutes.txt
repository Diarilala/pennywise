import express from 'express';
import cors from 'cors';
import {displayProfile, loginUser, registerUser} from "../Controller/UserController.js";
import authMiddleware from "../Middleware/authMiddleware.js";

const router = express.Router();


router.post('/auth/signup', registerUser);
router.post('/auth/login', loginUser);
router.use(authMiddleware);
router.get('/user/profile', displayProfile);

export default router;






import express from 'express';

import cors from 'cors'

import userRoutes from './routes/UserRoutes.js'
import expenseRoutes from './routes/ExpenseRoutes.js'
import receiptRoutes from './routes/ReceiptRoutes.js'
import categoryRoutes from './routes/CategoryRoutes.js'
import cookieParser from "cookie-parser";
import summaryRoutes from './routes/SummaryRoutes.js'


const app = express();


app.use(cors({
    origin: "http://localhost:5173",  
    credentials: true                 
}));

app.use(cookieParser());


app.use(express.json());

app.use('/api/expense', expenseRoutes )

app.use('/api/receipt', receiptRoutes);

app.use('/api', userRoutes);

app.use('/api/category', categoryRoutes);

app.use('/api/summary' , summaryRoutes);

app.listen(3000, () => {
    console.log("Listening to port 3000"); 
})






import {  useState } from "react";
import { useNavigate } from "react-router-dom";

const LoginPage = () => {
    const [username, setUserName] = useState("");
    const [password, setPassword] = useState("");

    const navigate = useNavigate()

    const handleLogin = async () => {
        if (username.trim() == "") {
            alert("The 'Username' field cannot be empty");
            return;
        }
        const userCredentials = {
            username: username,
            password: password
        }
        console.log(userCredentials);
        
        try{
            const loginRequest = await fetch('http://localhost:3000/api/auth/login', {
                method: "POST",
                headers: {
                    'Content-type' : 'application/json'
                },
                credentials: "include",
                body: JSON.stringify(userCredentials)
            })
            console.log("rere");
            
            if(!loginRequest.ok){
                throw new Error("Error while loggin in");
                
            }
            const data = await loginRequest.json()
            console.log(data);
            console.log("attemp");
            
            navigate('/dashboard')
        } catch(err) {
            console.error(err);
        }
        
    }


    return (
        <>
            <div className="border-1 text-4xl absolute left-2/5 top-1/4 p-5 flex flex-col items-center" >
                <p>Welcome to PennyWise !</p>
                <label htmlFor=""> Username: 
                    <input required value={username} onChange={(e) => setUserName(e.target.value)} type="text" name="username" id="username"/>
                </label>
                <label htmlFor="password"> Password: 
                    <input required value={password} onChange={(e) => setPassword(e.target.value)} type="password" name="password" id="password"/>
                </label>
                <div className="flex gap-5">
                    <button onClick={async () => await handleLogin()} type="submit" className="bg-blue-200 p-2 rounded-2xl">Login</button>
                    <button onClick={() => navigate("/signup")} className="bg-green-200 p-2 rounded-2xl">Sign up</button>
                </div>
            </div>
        </>
    )
}

export default LoginPage;




import {  useState } from "react";
import { useNavigate } from "react-router-dom"

const SignupPage = () => {

    const [firstName, setFirstname] = useState("");
    const [lastName, setLastname] = useState("");
    const [username, setUsername] = useState("");
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");

    const navigate = useNavigate();

    const handleSignup = async() => {
        try{
            const newUser = {
                firstName, lastName, username, email, password
            }
            //console.log(newUser);
            const response = await fetch(`http://localhost:3000/api/auth/signup`, {
                method: 'POST',
                headers: {
                    "Content-type" : 'application/json'
                },
                body: JSON.stringify(newUser)
            })
            
            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(`Error ${response.status}: ${errorData.message || 'Signup failed'}`);
            }
            
            const data = await response.json();
            console.log('Signup successful:', data);
            alert("New user created");
            navigate('/');

        } catch(err) {
            console.error(err);
            
        }
    }
    return (
        <div className="w-1/3 border-1 m-auto p-5 flex flex-col items-center ">
            <p>Welcome to pennywise!!!</p>
            <p>Please fill up the required fields</p>

            <label htmlFor="firstname">First name: 
                <input value={firstName} onChange={(e) => setFirstname(e.target.value)} className="text-center outline-0" type="text" name="firstname" id="firstname" placeholder="Your first name ..."/>
            </label>

            <label htmlFor="lastname">Last name: 
                <input value={lastName} onChange={(e) => setLastname(e.target.value)} className="text-center outline-0" type="text" name="lastname" id="lastname" placeholder="Your last name ..."/>
            </label>

            <label htmlFor="username">Username: 
                <input value={username} onChange={(e) => setUsername(e.target.value)} className="text-center outline-0" type="text" name="username" id="username" placeholder="Your username"/>
            </label>

            <label htmlFor="email">Email
                <input value={email} onChange={(e) => setEmail(e.target.value)} className="text-center outline-0" type="text" id="email" name="email" placeholder="Your email"/>
            </label>

            <label htmlFor="password">Password:
                <input value={password} onChange={(e) =>setPassword(e.target.value)} className="text-center outline-0" type="password" placeholder="Your password" name="password" id="password"/>
            </label>
            <div className="flex gap-5">
                <button 
                onClick={() => navigate("/")}
                className="bg-red-200 p-2 rounded-xl"
                >Login page</button>

                <button
                className="bg-green-200 p-2 rounded-xl"
                onClick={handleSignup}
                >
                Create user
                </button>    
            </div>
        </div>
    )
}

export default SignupPage